{"ast":null,"code":"var _jsxFileName = \"/Users/sharath/Documents/utd/internship/untitled folder/UTD-ToDo_List_App/todo-react/src/components/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodo = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [description, setDescription] = useState(\"\");\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7210/all\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const markAsDone = async (todo, flag) => {\n    todo.is_done = flag;\n    update(todo);\n  };\n\n  const update = async todo => {\n    try {\n      const body = {\n        \"description\": todo.description,\n        \"is_done\": todo.is_done,\n        \"is_deleted\": false\n      }; // console.log(body);\n\n      const response = await fetch(\"http://localhost:7210/update?id=\" + todo.id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, [todos]);\n\n  const displayDescription = todo => {\n    if (todo.is_done) {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"strike\", {\n          children: todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  const displayDone = todo => {\n    if (todo.is_done) {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => markAsDone(todo, !todo.is_done),\n          children: \"Mark as Not Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => markAsDone(todo, !todo.is_done),\n          children: \"Mark as Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  const onAdd = async e => {\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(\"http://localhost:7210/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const displayAdd = () => {\n    if (description.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: onAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: onAdd,\n        disabled: true,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: \"Type here to add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), displayAdd()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-5\",\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table mt-5 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mark as Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [displayDescription(todo), displayDone(todo)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTodo, \"OVSj/kCXh36SmbQVfsKcwzOKsXI=\");\n\n_c = ListTodo;\nexport default ListTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["/Users/sharath/Documents/utd/internship/untitled folder/UTD-ToDo_List_App/todo-react/src/components/ListTodo.js"],"names":["React","Fragment","useEffect","useState","ListTodo","todos","setTodos","description","setDescription","getTodos","response","fetch","jsonData","json","err","console","error","message","markAsDone","todo","flag","is_done","update","body","id","method","headers","JSON","stringify","log","displayDescription","displayDone","onAdd","e","displayAdd","length","target","value","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\n\nconst ListTodo = () => {\n\n    const [todos, setTodos] = useState([]);\n    const [description, setDescription] = useState(\"\");\n\n    const getTodos = async () => {\n        try {\n\n            const response = await fetch(\"http://localhost:7210/all\");\n            const jsonData = await response.json();\n\n            setTodos(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const markAsDone = async (todo, flag) => {\n        todo.is_done = flag;\n\n        update(todo);\n    }\n\n    const update = async (todo) => {\n        try {\n            const body = {\n                \"description\": todo.description,\n                \"is_done\": todo.is_done,\n                \"is_deleted\": false\n            };\n            // console.log(body);\n            const response = await fetch(\"http://localhost:7210/update?id=\" + todo.id, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            console.log(response);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, [todos]);\n\n\n    const displayDescription = (todo) => {\n        if (todo.is_done) {\n            return (<td><strike>{todo.description}</strike></td>);\n        } else {\n            return (<td>{todo.description}</td>);\n        }\n    }\n\n    const displayDone = (todo) => {\n        if (todo.is_done) {\n            return (<td><button className='btn btn-danger' onClick={() => markAsDone(todo, !todo.is_done)}>Mark as Not Done</button></td>);\n        } else {\n            return (<td><button className='btn btn-primary' onClick={() => markAsDone(todo, !todo.is_done)}>Mark as Done</button></td>);\n        }\n    }\n\n    const onAdd = async e => {\n        try {\n            const body = { description };\n            const response = await fetch(\"http://localhost:7210/create\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            setDescription(\"\");\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const displayAdd = () => {\n        if (description.length > 0) {\n            return (<button className='btn btn-success' onClick={onAdd}>Add</button>);\n        } else {\n            return (<button className='btn btn-success' onClick={onAdd} disabled={true}>Add</button>);\n        }\n    }\n\n    return (\n        <Fragment>\n            <Fragment>\n                <h1 className='text-center mt-5'>Type here to add</h1>\n                <div className='d-flex mt-5'>\n                <input type=\"text\" className='form-control' value={description} onChange={e => setDescription(e.target.value)} />\n                {displayAdd()}\n                </div>\n            </Fragment>\n            <Fragment>\n                <h1 className='mt-5'>List</h1>\n                <table className=\"table mt-5 text-center\">\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            {/* <th>Edit</th> */}\n                            <th>Mark as Done</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {todos.map(todo => (\n                            <tr key={todo.id}>\n                                {displayDescription(todo)}\n                                {/* <EditTodo /> */}\n                                {displayDone(todo)}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Fragment>\n        </Fragment>\n    );\n}\n\nexport default ListTodo;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sharath/Documents/utd/internship/untitled folder/UTD-ToDo_List_App/todo-react/src/components/TodoListComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Container, Segment, Header, Icon, Input, List, Divider } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListComponent = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n  }, [todos]);\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7210/all\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const markAsDone = async (todo, flag) => {\n    todo.is_done = flag;\n    updateTodo(todo, false);\n  };\n\n  const updateTodo = async (todo, is_deleted) => {\n    try {\n      const body = {\n        \"description\": todo.description,\n        \"is_done\": todo.is_done,\n        \"is_deleted\": is_deleted\n      }; // console.log(body);\n\n      const response = await fetch(\"http://localhost:7210/update?id=\" + todo.id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const displayItem = todo => {\n    if (todo.is_done) {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Content, {\n          floated: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            icon: true,\n            labelPosition: \"right\",\n            size: \"mini\",\n            onClick: () => markAsDone(todo, !todo.is_done),\n            children: [\"Undo\", /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"minus square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            basic: true,\n            icon: true,\n            size: \"mini\",\n            onClick: () => updateTodo(todo, true),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"times circle outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h4\",\n            color: \"grey\",\n            children: /*#__PURE__*/_jsxDEV(\"strike\", {\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Content, {\n          floated: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            icon: true,\n            labelPosition: \"right\",\n            size: \"mini\",\n            onClick: () => markAsDone(todo, !todo.is_done),\n            children: [\"Done\", /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"check square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            icon: true,\n            basic: true,\n            size: \"mini\",\n            onClick: () => updateTodo(todo, true),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"times circle outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h4\",\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const onAdd = async e => {\n    try {\n      const body = {\n        description\n      };\n      const response = await fetch(\"http://localhost:7210/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      setDescription(\"\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const displayAdd = () => {\n    if (description.length > 0) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        animated: \"fade\",\n        primary: true,\n        onClick: onAdd,\n        size: \"huge\",\n        children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n          visible: true,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        size: \"huge\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      style: {\n        'marginTop': '1em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        color: \"yellow\",\n        name: \"sticky note outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      style: {\n        'marginTop': '2em'\n      },\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          transparent: true,\n          style: {\n            'marginTop': '2em'\n          },\n          placeholder: \"Type Something to Add..\",\n          size: \"massive\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), displayAdd()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h3\",\n          textAlign: \"center\",\n          style: {\n            'marginTop': '4em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n            children: \"Here are the Todos to complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          divided: true,\n          relaxed: true,\n          style: {\n            'marginTop': '2em'\n          },\n          children: todos.map(todo => displayItem(todo))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListComponent, \"OVSj/kCXh36SmbQVfsKcwzOKsXI=\");\n\n_c = TodoListComponent;\nexport default TodoListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListComponent\");","map":{"version":3,"sources":["/Users/sharath/Documents/utd/internship/untitled folder/UTD-ToDo_List_App/todo-react/src/components/TodoListComponent.js"],"names":["React","Fragment","useState","useEffect","Button","Container","Segment","Header","Icon","Input","List","Divider","TodoListComponent","todos","setTodos","description","setDescription","getTodos","response","fetch","jsonData","json","err","console","error","message","markAsDone","todo","flag","is_done","updateTodo","is_deleted","body","id","method","headers","JSON","stringify","log","displayItem","onAdd","e","displayAdd","length","target","value","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Container, Segment, Header, Icon, Input, List, Divider } from 'semantic-ui-react';\n\nconst TodoListComponent = () => {\n\n    const [todos, setTodos] = useState([]);\n    const [description, setDescription] = useState(\"\");\n\n\n    useEffect(() => {\n        getTodos();\n    }, [todos]);\n\n    const getTodos = async () => {\n        try {\n\n            const response = await fetch(\"http://localhost:7210/all\");\n            const jsonData = await response.json();\n\n            setTodos(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const markAsDone = async (todo, flag) => {\n        todo.is_done = flag;\n\n        updateTodo(todo, false);\n    }\n\n    const updateTodo = async (todo, is_deleted) => {\n        try {\n            const body = {\n                \"description\": todo.description,\n                \"is_done\": todo.is_done,\n                \"is_deleted\": is_deleted\n            };\n            // console.log(body);\n            const response = await fetch(\"http://localhost:7210/update?id=\" + todo.id, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            console.log(response);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n\n    const displayItem = (todo) => {\n        if (todo.is_done) {\n            return (\n                <List.Item>\n                    <List.Content floated='right'>\n                        <Button color='red' icon labelPosition='right' size='mini' onClick={() => markAsDone(todo, !todo.is_done)}>\n                            Undo\n                            <Icon name='minus square' />\n                        </Button>\n                        <Button color='black' basic icon size='mini' onClick={() => updateTodo(todo, true)}>\n                            <Icon name='times circle outline' />\n                        </Button>\n                    </List.Content>\n                    <List.Content>\n                        <Header as='h4' color='grey'>\n                            <strike>{todo.description}</strike>\n                        </Header>\n                    </List.Content>\n                </List.Item>\n            )\n        } else {\n            return (\n                <List.Item>\n                    <List.Content floated='right'>\n                        <Button color='green' icon labelPosition='right' size='mini' onClick={() => markAsDone(todo, !todo.is_done)}>\n                            Done\n                            <Icon name='check square' />\n                        </Button>\n                        <Button color='black' icon basic size='mini' onClick={() => updateTodo(todo, true)}>\n                            <Icon name='times circle outline' />\n                        </Button>\n                    </List.Content>\n                    <List.Content>\n                        <Header as='h4'>\n                            {todo.description}\n                        </Header>\n                    </List.Content>\n                </List.Item>\n            )\n        }\n    }\n\n    const onAdd = async e => {\n        try {\n            const body = { description };\n            const response = await fetch(\"http://localhost:7210/create\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            setDescription(\"\");\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const displayAdd = () => {\n        if (description.length > 0) {\n            return (\n                <Button animated='fade' primary onClick={onAdd} size='huge'>\n                    <Button.Content visible>Add</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name='check' />\n                    </Button.Content>\n                </Button>\n            )\n        } else {\n            return (\n                <Button disabled size='huge'>Add</Button>\n            )\n        }\n    }\n\n    return (\n        <Container textAlign='center'>\n            <Header as='h1' textAlign='center' style={{ 'marginTop': '1em' }}>\n                <Icon color='yellow' name='sticky note outline' />\n                <Header.Content>Todo App</Header.Content>\n            </Header>\n            <Segment style={{ 'marginTop': '2em' }} textAlign='center'>\n\n                <div>\n                    <Input transparent style={{ 'marginTop': '2em' }}\n                        placeholder='Type Something to Add..'\n                        size='massive'\n                        value={description} onChange={e => setDescription(e.target.value)} />\n                    {displayAdd()}\n                </div>\n\n\n                <div>\n                    <Header as='h3' textAlign='center' style={{ 'marginTop': '4em' }}>\n                        <Icon name='tasks' />\n                        <Header.Content>Here are the Todos to complete</Header.Content>\n                    </Header>\n                    <Divider />\n                </div>\n\n                <div>\n                    <List divided relaxed style={{ 'marginTop': '2em' }}>\n                        {todos.map(todo => (\n                            displayItem(todo)\n                        ))}\n\n                    </List>\n                </div>\n\n            </Segment>\n        </Container>\n    );\n}\n\nexport default TodoListComponent;"]},"metadata":{},"sourceType":"module"}